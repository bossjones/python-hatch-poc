# examples to look at:
# SOURCE: https://github.com/repo-helper/hatch-requirements-txt/blob/master/pyproject.toml
# SOURCE: https://github.com/hynek/structlog/blob/6e2e8c6025fb90484c5e6c5ff2fd3e96a61854cf/pyproject.toml#L3-L5
# SOURCE: https://github.com/tiangolo/fastapi/blob/1073062c7f2c48bcc28bcedbdc009c18c171f6fb/pyproject.toml#L1-L3
# SOURCE: https://github.com/pydantic/pydantic/blob/f341049b9e5538a125751d75b4e44c1609b53df6/pyproject.toml#L1-L3
# SOURCE: https://github.com/maresb/hatch-vcs-footgun-example
# SOURCE: https://github.com/juftin/camply/blob/9eaec514c982623a8453cce692d50b1ddedba14a/pyproject.toml#L2
# SOURCE: https://github.com/KingMichaelPark/hatch-python-cookiecutter/blob/main/%7B%7Bcookiecutter.project_slug%7D%7D/pyproject.toml
# SOURCE: https://github.com/alvarobartt/opentrain/blob/main/pyproject.toml
# SOURCE: https://github.com/danielfrg/mkdocs-jupyter/blob/4b5b5027daca0b3b857cb0cc025a388ae0307470/pyproject.toml#L42
# https://github.com/fredrikaverpil/hatch-playground
# SOURCE: https://github.com/repo-helper/hatch-requirements-txt/blob/master/.github/workflows/python_ci.yml
[build-system]
build-backend = "hatchling.build"
# requires = ["hatchling", "pip-tools==6.13.0", "setuptools==66.1.1", "wheel"]
# requires = ["hatchling", "hatch-vcs", "hatch-requirements-txt"]
requires = ["hatchling", "hatch-requirements-txt"]

[project]
authors = [{name = "Malcolm Jones"}]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
# dependencies = []
description = "Simple library for me to test out playing with hatchling"
dynamic = ["version", "dependencies"]
keywords = []
license = "MIT"
name = "hatchpoc"
readme = "README.md"
requires-python = ">=3.8,<3.12"

[project.urls]
Documentation = "https://bossjones.github.io/hatchpoc"
Issues = "https://github.com/bossjones/hatchpoc/issues"
Source = "https://github.com/bossjones/hatchpoc"

# [project.scripts]
# gradio = "gradio.reload:run_in_reload_mode"

# SOURCE: https://github.com/fredrikaverpil/hatch-playground/blob/main/pyproject.toml
[tool.hatch.version]
path = "src/hatchpoc/__init__.py"

# [tool.hatch.version]
# source = "vcs"

# [tool.hatch.build.hooks.vcs]
# version-file = "_version.py"



[tool.hatch.metadata.hooks.requirements_txt]
filename = "requirements.txt"


# [tool.hatch.metadata]
# allow-direct-references = true

[project.optional-dependencies]
docs = [
  "mkdocs~=1.4.0",
  "mkdocs-material~=8.5.4",
  "mkdocs-git-revision-date-localized-plugin~=1.1.0",
  "mkdocstrings[python]~=0.19.0",
]
quality = [
  "black~=22.10.0",
  "ruff~=0.0.263",
  "pre-commit~=2.20.0",
  "flake8",
  "isort",
  "ruff",
  "autopep8",
  "autoflake",
  "pylint",
  "pycodestyle",
  "sourcery",
  "validate-pyproject[all]"
]
tests = [
  "pytest~=7.1.2",
  "pytest-cov",
  "pytest-mock",
  "pytest-dotenv",
  "pytest-freezegun",
  "responses",
  "factory-boy",
  "pytest-sugar",
  "pytest-dotenv",
  "pytest-env",
  "pytest-clarity",
  "pytest-console-scripts",
  "types-mock",
  "behave"
]
types = [
  "mypy",
  "types-freezegun",
  "types-python-dateutil",
  "types-freezegun",
  "types-six",
  "types-pytz",
  "types-PyYAML",
  "types-click",
  "types-colorama",
  "types-dataclasses",
  "types-requests",
  "types-setuptools",
  "types-mock",
]
security= [
  "pip-audit",
  "pip-licenses"
]
build = [
  "build",
  "hatchpoc"
]
dev = [
  "hatchpoc[tests,quality,docs,types,security,build]",
  "pip-tools==6.13.0",
  "setuptools==66.1.1",
  "wheel",
  "pre-commit",
  "debugpy",
  "pdbpp",
  "invoke==2.0.0",
  "bpython",
  "codecov"
]

[tool.hatch.envs.quality]
features = [
  "quality",
]

[tool.hatch.envs.quality.scripts]
check = [
  "black --check --diff --preview src tests",
  "ruff src tests",
]
format = [
  "black --preview src tests",
  "ruff --fix src tests",
  "check",
]

[tool.ruff]
src = ["src", "tests"]
ignore = [
  "E501", # line too long, handled by black
  "B008", # do not perform function calls in argument defaults
  "C901", # too complex
]
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "I", # isort
  "C", # flake8-comprehensions
  "B", # flake8-bugbear
]

[tool.ruff.per-file-ignores]
"*/__init__.py" = [
  "D"  # pydocstyle
  ]
"tests/*" = [
    "S101",  # assert used
    "S105"  # hardcoded password
]

[tool.ruff.isort]
known-first-party = ["hatchpoc"]

[tool.hatch.envs.tests]
features = [
  "tests",
]

[tool.hatch.envs.tests.scripts]
run = "pytest tests/ --durations 0 -s"

[[tool.hatch.envs.tests.matrix]]
python = ["38", "39", "310", "311"]

[tool.hatch.envs.docs]
features = [
  "docs",
]

[tool.hatch.envs.docs.scripts]
build = [
  "mkdocs build",
]
serve = [
  "mkdocs serve",
]


[tool.hatch.build.targets.wheel]
packages = ["src/hatchpoc"]
include = [
  "/src/hatchpoc",
  "/tests",
  "/README.md",
  "/requirements.txt",
]

[tool.hatch.build.targets.sdist]
# packages = ["src/hatchpoc"]
# exclude = [
#   "/.github",
#   "/.vscode",
#   "/docs",
#   "/.devcontainer",
#   "/.pre-commit-config.yaml",
#   "/.gitignore",
#   "/tests",
#   "/Dockerfile",
#   "/.dockerignore",
# ]
# include = [
#   "/src",
#   # "/src/hatchpoc",
#   "/README.md",
#   "/requirements.txt",
# ]

[tool.coverage.run]
branch = true
parallel = true

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

# [tool.mypy]
# python_version = "3.9"
# namespace_packages = true
# check_untyped_defs = true
# warn_unused_ignores = true
# no_implicit_optional = true
# show_error_codes = true

[tool.mypy]
allow_subclassing_any = true
allow_untyped_calls = true
allow_untyped_decorators = true
exclude = ["./contrib/"]
ignore_missing_imports = true
implicit_reexport = true
namespace_packages = true
pretty = true
show_error_codes = true
strict = true
warn_return_any = false
warn_unused_ignores = false

    # Remove this and add `types-redis`
    # when the issue https://github.com/python/typeshed/issues/8242 is resolved.
    [[tool.mypy.overrides]]
    ignore_missing_imports = true
    module = ['redis.asyncio']

[tool.pytest.ini_options]
testpaths = 'tests'
xfail_strict = true
# filterwarnings = [
#     'error',
#     "ignore::UserWarning",
# ]
#     'ignore:path is deprecated.*:DeprecationWarning:',
#     # Work around https://github.com/pytest-dev/pytest/issues/10977 for Python 3.12
#     'ignore:(ast\.Str|ast\.NameConstant|ast\.Num|Attribute s) is deprecated and will be removed.*:DeprecationWarning:',
#     'DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.'
# ]

# # SOURCE: https://github.com/psf/black/blob/f22273a72b3f1c15085f2d4a43e8d785bf48c822/pyproject.toml#L28-L30
# [tool.pytest.ini_options]
# # Option below requires `tests/optional.py`
# addopts = "--strict-config --strict-markers"
# optional-tests = [
#   "no_blackd: run when `d` extra NOT installed",
#   "no_jupyter: run when `jupyter` extra NOT installed",
# ]
# markers = [
#   "incompatible_with_mypyc: run when testing mypyc compiled black"
# ]
# xfail_strict = true
# filterwarnings = [
#     "error",
#     # this is mitigated by a try/catch in https://github.com/psf/black/pull/2974/
#     # this ignore can be removed when support for aiohttp 3.7 is dropped.
#     '''ignore:Decorator `@unittest_run_loop` is no longer needed in aiohttp 3\.8\+:DeprecationWarning''',
#     # this is mitigated by a try/catch in https://github.com/psf/black/pull/3198/
#     # this ignore can be removed when support for aiohttp 3.x is dropped.
#     '''ignore:Middleware decorator is deprecated since 4\.0 and its behaviour is default, you can simply remove this decorator:DeprecationWarning''',
#     # this is mitigated by https://github.com/python/cpython/issues/79071 in python 3.8+
#     # this ignore can be removed when support for 3.7 is dropped.
#     '''ignore:Bare functions are deprecated, use async ones:DeprecationWarning''',
#     # aiohttp is using deprecated cgi modules - Safe to remove when fixed:
#     # https://github.com/aio-libs/aiohttp/issues/6905
#     '''ignore:'cgi' is deprecated and slated for removal in Python 3.13:DeprecationWarning''',
# ]

# # pre-install commands
# [tool.hatch.envs.<ENV_NAME>]
# pre-install-commands = [
#   "...",
# ]
# create a global hatch config.toml
# https://hatch.pypa.io/latest/config/hatch/


